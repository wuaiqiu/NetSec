					docker

一.安装

		pacman -S docker
	
		systemctl start docker.service
	
		systemctl enable docker.service

		sudo docker info


	
二.简介

	Docker 可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行

的 Linux 机器上，也可以实现虚拟化。

	Docker 镜像(Images)		Docker 镜像是用于创建 Docker 容器的模板。
	Docker 容器(Container)		容器是独立运行的一个或一组应用。
	Docker 客户端(Client)		Docker 客户端通过命令行或者其他工具使用 
	Docker 仓库(Registry)		Docker 仓库用来保存镜像，可以理解为代码控制中的代码仓库。
					Docker Hub(https://hub.docker.com) 提供了庞大的镜像集合供使用。

	
	Client --操作--> Server ---创建--> Container  <--实例化--  Images



	
三.操作
	
	(1)运行一个新容器 docker run

	docker run    ubuntu:15.10    /bin/echo "Hello world" 	#在容器中执行密码
			
	docker run    -t  -i  	ubuntu:15.10 /bin/bash
				-t:在新容器内指定一个伪终端或终端。
				-i:允许你对容器内的标准输入 (STDIN) 进行交互	

	docker run 	-d      ubuntu:15.10 /bin/sh  "while true; do echo hello world; sleep 1; done"
				-d:后台模式

	docker run 	-d -P 	training/webapp python app.py	#运行一个web容器
				-P			自动安排监听端口
				-p Localhost:Container	自定义端口


	(2)查看后台容器

	docker ps 	#查看后台容器
	
	docker ps -l 	#查询最后一次创建的容器
		  -a	所有创建的容器
	
	(3)容器操作

	docker logs	容器ID/容器名	#查看容器内的标准输出
	
	docker stop 	容器ID/容器名 	#停止容器
	
	docker start 	容器ID/容器名	#启动容器
	
	docker restart 	容器ID/容器名	#重启容器

	docker port 	容器ID/容器名	#查看容器端口的映射情况

	docker top 	容器ID/容器名	#查看容器后台进程

	docker rm 	容器ID/容器名	#删除容器，容器必须是停止状态-f可以强制

	
	(4)镜像操作

	docker images 			#来列出本地主机上的镜像

	docker pull ubuntu:13.10	#预下载镜像

	docker search httpd		#查找镜像
 
	docker commit -m="has update" -a="runoob" e218edb10161 runoob/ubuntu:v2		#修改后提交镜像
				-m:提交的描述信息
				-a:指定镜像作者
				e218edb10161：容器ID
				runoob/ubuntu:v2:指定要创建的目标镜像名

	docker build	-t runoob/centos:6.7 .		#根据Dorkerfile创建镜像
				-t ：指定要创建的目标镜像名
				. ：Dockerfile 文件所在目录

	docker rmi ubuntu:v2  	#删除本地镜像。
		

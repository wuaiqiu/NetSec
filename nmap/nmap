						nmap
						
1.简介

	Nmap又叫做Network Mapper(网络映射器)是一个开源并且为了Linux系统管理员或者
	
网络管理员的万能的工具。Nmap用于浏览网络，执行安全扫描，网络审计以及在远程机器

找到开放端口。它可以扫描在线主机，操作系统，滤包器和远程主机打开的端口。



2.语法
	

	-v表示显示冗余（verbosity）信息，在扫描过程中显示扫描的细节，从而让用户了解当前的扫描状态。

	
	(1).主机发现（Host Discovery）
		
		默认情况下，Nmap会发送四种不同类型的数据包来探测目标主机是否在线。
				1.      ICMP echo request
				2.      a TCP SYN packet to port 443
				3.      a TCP ACK packet to port 80
				4.      an ICMP timestamp request
				
				
		nmap [options] target
			
			-sn				 		Ping Scan只进行主机发现，不进行端口扫描。  
  
			-Pn				    	将所有指定的主机视作开启的，跳过主机发现的过程。  
  
			-PS/PA/PU/PY[portlist]  使用TCP SYN/ACK或UDP(DNS domain)方式进行发现。  
  
			-PE/PP/PM 				使用ICMP echo, timestamp, and netmask 请求包发现主机。
			
			-n/-R				    -n表示不进行DNS解析；-R表示总是进行DNS解析。  
  
			--traceroute		    追踪每个路由节点  
		
	======================================================================================
			
			nmap -sn 192.168.1.100-192.168.1.120
					在局域网内，Nmap是通过ARP包来询问IP地址上的主机是否活动的，
				
	======================================================================================

	(2)端口扫描（Port Scanning）
		
			Nmap通过探测将端口划分为6个状态：
						open：端口是开放的。
						closed：端口是关闭的。
						filtered：端口被防火墙IDS/IPS屏蔽，无法确定其状态。
						unfiltered：端口没有被屏蔽，但是否开放需要进一步确定。
						open|filtered：端口是开放的或被屏蔽。
						closed|filtered ：端口是关闭的或被屏蔽。
			

	----------------------------------------扫描方式--------------------------------------
			
			-sS/sT/sA/sW/sM:指定使用 TCP SYN/Connect()/ACK/Window/Maimon scans的方式来对目
			标主机进行扫描。  
  
			-sU: 指定使用UDP扫描方式确定目标主机的UDP端口状况。  
  
			-sN/sF/sX: 指定使用TCP Null, FIN, and Xmas scans秘密扫描方式来协助探测对方的TCP端口状态。  
  
			--scanflags <flags>: 定制TCP包的flags。  
  
			-sI <zombiehost[:probeport]>: 指定使用idle scan方式来扫描目标主机
						（前提需要找到合适的zombie host）  
  
			-sY/sZ: 使用SCTP INIT/COOKIE-ECHO来扫描SCTP协议端口的开放的情况。  
  
			-sO: 使用IP protocol 扫描确定目标机支持的协议类型。  
  
			-b <FTP relay host>: 使用FTP bounce scan扫描方式  
			
			 TCP SYN scanning这是Nmap默认的扫描方式，通常被称作半开放扫描（Half-open scanning）。
该方式发送SYN到目标端口，如果收到SYN/ACK回复，那么判断端口是开放的；如果收到RST包，说明该端口
是关闭的。如果没有收到回复，那么判断该端口被屏蔽（Filtered）。因为该方式仅发送SYN包对目标主机
的特定端口，但不建立的完整的TCP连接，所以相对比较隐蔽，而且效率比较高，适用范围广。

			TCP connect方式使用系统网络API connect向目标主机的端口发起连接，如果无法连接，说明
该端口关闭。该方式扫描速度比较慢，而且由于建立完整的TCP连接会在目标机上留下记录信息，不够隐蔽。
所以，TCP connect是TCP SYN无法使用才考虑选择的方式。

			 TCP ACK scanning向目标主机的端口发送ACK包，如果收到RST包，说明该端口没有被防火墙
屏蔽；没有收到RST包，说明被屏蔽。该方式只能用于确定防火墙是否屏蔽某个端口，可以辅助TCP SYN的
方式来判断目标主机防火墙的状况。

			TCP FIN/Xmas/NULL scanning这三种扫描方式被称为秘密扫描（Stealthy Scan），因为相对
比较隐蔽。FIN扫描向目标主机的端口发送的TCP FIN包或Xmas tree包/Null包，如果收到对方RST回复包，
那么说明该端口是关闭的；没有收到RST包说明端口可能是开放的或被屏蔽的（open|filtered）。其中Xmas 
tree包是指flags中FIN URG PUSH被置为1的TCP包；NULL包是指所有flags都为0的TCP包。

			UDP scanning用于判断UDP端口的情况。向目标主机的UDP端口发送探测包，如果收到回复
“ICMP port unreachable”就说明该端口是关闭的；如果没有收到回复，那说明UDP端口可能是开放的或
屏蔽的。因此，通过反向排除法的方式来断定哪些UDP端口是可能出于开放状态

			
	-------------------------------选项------------------------------------------------
			
			-p <port ranges>: 扫描指定的端口  
			实例: -p22; -p1-65535; -p U:53,111,137,T:21-25,80,139,8080,S:9
			（其中T代表TCP协议、U代表UDP协议、S代表SCTP协议）  
  
			-F: Fast mode – 快速模式，仅扫描TOP 100的端口  
  
			-r: 不进行端口随机打乱的操作（如无该参数，nmap会将要扫描的端口以随
			机顺序方式扫描，以让nmap的扫描不易被对方防火墙检测到）。  
  
			--top-ports <number>:扫描开放概率最高的number个端口（nmap的作者曾经做过大规模地互
			联网扫描，以此统计出网络上各种端口可能开放的概率。以此排列出最有可能开放端口的列表，
			具体可以参见文件：nmap-services。默认情况下，nmap会扫描最有可能的1000个TCP端口）  
  
			--port-ratio <ratio>: 扫描指定频率以上的端口。与上述--top-ports类似，这里以概率作
			为参数，让概率大于--port-ratio的端口才被扫描。显然参数必须在在0到1之间，具体范围
			概率情况可以查看nmap-services文件。 
			
			-T4指定扫描过程使用的时序（Timing），总有6个级别（0-5），级别越高，扫描速度越快，
			但也容易被防火墙或IDS检测并屏蔽掉，在网络通讯状况良好的情况推荐使用T4；
			
	=======================================================================================
			
			nmap –sS –sU –T4 –top-ports 300 192.168.1.100
			
	=======================================================================================

	
	
	(3)版本侦测（Version Detection）
	
			用于确定目标主机开放端口上运行的具体的应用程序及版本信息。
			
			-sV: 指定让Nmap进行版本侦测  
  
			--version-intensity <level>: 指定版本侦测强度（0-9），默认为7。数值越高，
			探测出的服务越准确，但是运行时间会比较长。  
  
			--version-light: 指定使用轻量侦测方式 (intensity 2)  
  
			--version-all: 尝试使用所有的probes进行侦测 (intensity 9)  
  
			--version-trace: 显示出详细的版本侦测过程信息。  
			
	===================================================================================
			
				nmap –sV 192.168.1.100
				
	===================================================================================


	(4)操作系统侦测（Operating System Detection）
	
		操作系统侦测用于检测目标主机运行的操作系统类型及设备类型等信息。
		Nmap拥有丰富的系统数据库nmap-os-db，目前可以识别2600多种操作系统与设备类型。
		
		
		-O: 指定Nmap进行OS侦测。  
  
		--osscan-limit: 限制Nmap只对确定的主机的进行OS探测（至少需确知该主机分别有
		一个open和closed的端口）。  
  
		--osscan-guess: 大胆猜测对方的主机的系统类型。由此准确性会下降不少，但会尽
		可能多为用户提供潜在的操作系统。 
		
	==============================================================================
		
		nmap –O 192.168.1.100
		
	==============================================================================
		
		

		
3.高级用法

	 (1)防火墙/IDS(入侵检测系统)规避
	 
	---------------------------------方法-----------------------------------------
	
			-f; --mtu <val>: 指定使用分片、指定数据包的MTU.  
  
			-D <decoy1,decoy2[,ME],...>: 用一组IP地址掩盖真实地址，其中ME填入自己的IP地址。  
  
			-S <IP_Address>: 伪装成其他IP地址  
  
			-e <iface>: 使用特定的网络接口  
  
			-g/--source-port <portnum>: 使用指定源端口  
  
			--data-length <num>: 填充随机数据让数据包长度达到Num。  
  
			--ip-options <options>: 使用指定的IP选项来发送数据包。  
  
			--ttl <val>: 设置time-to-live时间。  
  
			--spoof-mac <mac address/prefix/vendor name>: 伪装MAC地址  
  
			--badsum: 使用错误的checksum来发送数据包（正常情况下，该类数据包被抛弃，
			如果收到回复，说明回复来自防火墙或IDS/IPS）。

		
		分片（Fragmentation）将可疑的探测包进行分片处理（例如将TCP包拆分成多个IP包发送过去），
某些简单的防火墙为了加快处理速度可能不会进行重组检查，以此避开其检查。

		IP诱骗（IP decoys）在进行扫描时，将真实IP地址和其他主机的IP地址（其他主机需要在线，
否则目标主机将回复大量数据包到不存在的主机，从而实质构成了拒绝服务攻击）混合使用，以此让目标
主机的防火墙或IDS追踪检查大量的不同IP地址的数据包，降低其追查到自身的概率。注意，某些高级的
IDS系统通过统计分析仍然可以追踪出扫描者真实IP地址

		IP伪装（IP Spoofing）顾名思义，IP伪装即将自己发送的数据包中的IP地址伪装成其他主机的地址，
从而目标机认为是其他主机在与之通信。需要注意，如果希望接收到目标主机的回复包，那么伪装的IP需要位
于统一局域网内。另外，如果既希望隐蔽自己的IP地址，又希望收到目标主机的回复包，那么可以尝试使用
idle scan或匿名代理（如TOR）等网络技术。
	
		 指定源端口:某些目标主机只允许来自特定端口的数据包通过防火墙。例如FTP服务器配置为：
允许源端口为21号的TCP包通过防火墙与FTP服务端通信，但是源端口为其他端口的数据包被屏蔽。所以，
在此类情况下，可以指定Nmap将发送的数据包的源端口都设置特定的端口。

		 扫描延时:某些防火墙针对发送过于频繁的数据包会进行严格的侦查，而且某些系统限制错误
报文产生的频率（例如，Solaris 系统通常会限制每秒钟只能产生一个ICMP消息回复给UDP扫描），所以，
定制该情况下发包的频率和发包延时可以降低目标主机的审查强度、节省网络带宽。

		
	------------------------------------------------------------------------------
	
	
	==============================================================================
	
	nmap -v  -Pn -D192.168.1.100,192.168.1.102,ME -e eth0 -g 3355 192.168.1.1
	
	=============================================================================
	
	
	
	(2)NSE脚本引擎
	
		NSE脚本引擎（Nmap Scripting Engine）是Nmap最强大最灵活的功能之一，允许用户自己
	
	编写脚本来执行自动化的操作或者扩展Nmap的功能。
	
		
		-sC: 等价于 --script=default，使用默认类别的脚本进行扫描。  
  
		--script=<Lua scripts>: <Lua scripts>使用某个或某类脚本进行扫描，支持通配符描述  
  
		--script-args=<n1=v1,[n2=v2,...]>: 为脚本提供默认参数  
  
		--script-args-file=filename: 使用文件来为脚本提供参数  
  
		--script-trace: 显示脚本执行过程中发送与接收的数据  
  
		--script-updatedb: 更新脚本数据库  
  
		--script-help=<Lua scripts>: 显示脚本的帮助信息，其中<Luascripts>部分可以逗号
		分隔的文件或脚本类别。  
		
		
		---------------------------脚本(/usr/share/nmap/scripts/)------------------------------
		
		auth: 负责处理鉴权证书（绕开鉴权）的脚本  
		broadcast: 在局域网内探查更多服务开启状况，如dhcp/dns/sqlserver等服务  
		brute: 提供暴力破解方式，针对常见的应用如http/snmp等  
		default: 使用-sC或-A选项扫描时候默认的脚本，提供基本脚本扫描能力  
		discovery: 对网络进行更多的信息，如SMB枚举、SNMP查询等  
		dos: 用于进行拒绝服务攻击  
		exploit: 利用已知的漏洞入侵系统  
		external: 利用第三方的数据库或资源，例如进行whois解析  
		fuzzer: 模糊测试的脚本，发送异常的包到目标机，探测出潜在漏洞 
		intrusive: 入侵性的脚本，此类脚本可能引发对方的IDS/IPS的记录或屏蔽  
		malware: 探测目标机是否感染了病毒、开启了后门等信息  
		safe: 此类与intrusive相反，属于安全性脚本  
		version: 负责增强服务与版本扫描（Version Detection）功能的脚本  
		vuln: 负责检查目标机是否有常见的漏洞（Vulnerability），如是否有MS08_067
		
		

	
===============================================================================================

	发现地理位置
	
	(1)下载MaxMind的城市数据库http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz。
	解压到本地的NMAP数据文件夹($Nmap_DATA/nselib/data/)。
	(2)nmap --script ip-geolocation-maxmind <target> 
		
		
	获得WHOIS记录信息
	(1)nmap --script whois-ip --script-args whois.whodb=nofollow <目标> 
	
	暴力破解DNS记录
	(1)nmap --script dns-brute baidu.com
	
	HTTP方法
	(1)  nmap  --script http-methods  --script-args http-methods.retest scanme.nmap.org 
	
	扫描HTTP代理
	(1)nmap --script http-open-proxy -p8080 <target>
	
	发现有趣的文件和目录和管理员账户
	(1)nmap --script http-enum -p80 <target>
	
	暴力破解HTTP身份认证
	(1)nmap -p80 --script http-brute --script-args http-brute.path=/admin/, 
	userdb=/var/usernames.txt,passdb=/var/passwords.txt <target>
	
	
	
	